# vim: expandtab ts=2 sw=2 softtabstop=2 filetype=yaml


- name: "wgmesh key {{ wg_instance_name }}"
  ansible.builtin.shell:
    cmd: "umask 077 ; wg genkey | tee '{{ wg_instance_name }}.key' | wg pubkey > '{{ wg_instance_name }}.pub' ; cat '{{ wg_instance_name }}.pub'"
    creates: "{{ wg_instance_name }}.pub"
    chdir: "{{ wg_instance_dir }}"
- name: "wgmesh load key data {{ wg_instance_name }}"
  register: wg_key_result
  ansible.builtin.slurp:
    src: "{{ wg_instance_dir }}/{{ wg_instance_name }}.key"
- name: "wgmesh load pub data {{ wg_instance_name }}"
  register: wg_pub_result
  ansible.builtin.slurp:
    src: "{{ wg_instance_dir }}/{{ wg_instance_name }}.pub"
- name: "wgmesh config file {{ wg_instance_name }}"
  register: "wgmesh_conf"
  ansible.builtin.template:
    src: wgmesh.template
    dest: "{{ wg_instance_dir }}/{{ wg_instance_name }}.conf"
  vars:
    name: "{{Â wg_instance_name }}"
    conf: "{{ wg_instance_data }}"
    wgdir: "{{ wg_instance_dir }}"
    wgpub: "{{ wg_pub_result.content | b64decode | trim }}"
    wgkey: "{{ wg_key_result.content | b64decode | trim }}"
- name: "wgmesh reconfigure {{ wg_instance_name }}"
  when: "wgmesh_conf is defined and wgmesh_conf.changed is defined and wgmesh_conf.changed"
  ansible.builtin.service:
    name: "wg-quick@{{ wg_instance_name }}"
    state: restarted
